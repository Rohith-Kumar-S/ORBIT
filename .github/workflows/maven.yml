# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: ORBIT - Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build all modules
        run: mvn -B clean install -DskipTests

      - name: Build & push Product Service image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: phantomrogue88/product-service
          tags: v1, latest
          registry: docker.io
          dockerfile: services/product-service/Dockerfile
          directory: services/product-service
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & push User Service image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: phantomrogue88/user-service
          tags: v1, latest
          registry: docker.io
          dockerfile: services/user-service/Dockerfile
          directory: services/user-service
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & push Order Service image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: phantomrogue88/order-service
          tags: v1, latest
          registry: docker.io
          dockerfile: services/order-service/Dockerfile
          directory: services/order-service
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & push Cart Service image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: phantomrogue88/cart-service
          tags: v1, latest
          registry: docker.io
          dockerfile: services/cart-service/Dockerfile
          directory: services/cart-service
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  deploy:
    needs: build
    runs-on: self-hosted

    steps:
      - name: Ensure orbit directory exists
        run: |
          mkdir -p /home/ubuntu/orbit

      - name: Download docker-compose.yml from repository
        run: |
          curl -fsSL -o /home/ubuntu/orbit/docker-compose.yml \
            https://raw.githubusercontent.com/Rohith-Kumar-S/ORBIT/main/docker-compose.yml
          
          # Verify download succeeded
          if [ ! -s /home/ubuntu/orbit/docker-compose.yml ]; then
            echo "Failed to download docker-compose.yml"
            exit 1
          fi
          
          echo "Successfully downloaded docker-compose.yml"
          cat /home/ubuntu/orbit/docker-compose.yml

      - name: Stop and remove all running containers
        run: |
          cd /home/ubuntu/orbit
          
          # Stop all containers defined in docker-compose
          if [ -f docker-compose.yml ]; then
            sudo docker compose down --remove-orphans
          fi
          
          echo "All containers stopped and removed"

      - name: Load environment variables
        run: |
          if [ -f /etc/environment ]; then
            set -a
            source /etc/environment
            set +a
            echo "Environment variables loaded"
          fi

      - name: Pull latest images
        run: |
          cd /home/ubuntu/orbit
          sudo docker compose pull
          echo "Latest images pulled"

      - name: Start containers with new docker-compose.yml
        run: |
          cd /home/ubuntu/orbit
          
          # Load environment variables for this step too
          if [ -f /etc/environment ]; then
            set -a
            source /etc/environment
            set +a
          fi
          
          sudo docker compose up -d
          echo "Containers started successfully"

      - name: Verify deployment
        run: |
          cd /home/ubuntu/orbit
          echo "Running containers:"
          sudo docker compose ps
          
          # Optional: wait a few seconds and check if containers are still running
          sleep 5
          sudo docker compose ps

      - name: Clean up unused Docker resources
        run: |
          sudo docker system prune -f
          echo "Cleaned up unused Docker images and containers"
